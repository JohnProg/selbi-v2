{
	"rules": {
	    "users" : {
	    	"$uid" : {
	    		".write": "$uid === auth.uid",
                ".read": "$uid === auth.uid",

                ".validate": "newData.hasChildren(['name', 'email', 'userAgreementAccepted'])",

                "$other": { ".validate": false },

                "userAgreementAccepted" : {
                  ".validate" : "newData.isBoolean()"
                },

	    		"name": {
                    ".validate": "newData.hasChildren(['first', 'last'])",

                    "$other": { ".validate": false },

                    "first": {
                      ".validate" : "newData.isString()"
                    },
                    "last": {
                      ".validate" : "newData.isString()"
                    }
	    		},

                "profileImageUrl" : {
                    ".validate" : "newData.isString() && newData.val().matches(/^http(s)?:/)"
                },

	    		// TODO: Validate email is valid as well.
	    		"email": {
	    			".validate" : "newData.isString()"
	    		},

                // YYYY-MM-DD
                "dateOfBirth" : {
                    ".validate": "newData.isString() && newData.val().matches(/^(19|20)[0-9][0-9][-\\/. ](0[1-9]|1[012])[-\\/. ](0[1-9]|[12][0-9]|3[01])$/)"
                },

                "phoneNumber" : {
                    ".validate" : "newData.isNumber() && newData.val() > 999999999 && newData.val() < 10000000000"
                },

                "payments" : {
                  ".validate" : "newData.hasChildren(['stripeCustomerId', 'stripeCardId', 'cardType', 'lastFour', 'expirationDate'])",

                  "$other": { ".validate": false },

                  "stripeCustomerId" : {
                      ".validate" : "newData.isString()"
                  },
                  "stripeCardId" : {
                      ".validate" : "newData.isString()"
                  },
                  "cardType" : {
                      ".validate" : "newData.isString()"
                  },
                  "lastFour" : {
                      ".validate" : "newData.isNumber() && newData.val() > 999 && newData.val() < 10000"
                  },
                  // MM-YY
                  "expirationDate" : {
                      ".validate" : "newData.isString() && newData.val().matches(/^(0[1-9]|1[0-2])-[0-9][0-9]$/)"
                  }
                },

                "locations" : {
                    "$other": { ".validate": false },

                    "shipTo" : {
                        ".validate" : "newData.hasChildren(['address1', 'address2', 'city', 'state', 'zip', 'country'])",

                        "$other": { ".validate": false },

                        "address1" : {
                          ".validate" : "newData.isString()"
                        },
                        "address2" : {
                          ".validate" : "newData.isString()"
                        },
                        "city" : {
                          ".validate" : "newData.isString()"
                        },
                        "state" : {
                          ".validate" : "newData.isString()"
                        },
                        "zip" : {
                          ".validate" : "newData.isNumber() && newData.val() > 9999 && newData.val() < 100000"
                        },
                        "country" : {
                          ".validate" : "newData.isString()"
                        }
                    },
                    "sellingFrom" : {
                        ".validate" : "newData.hasChildren(['address1', 'address2', 'city', 'state', 'zip', 'country'])",

                        "$other": { ".validate": false },

                        "address1" : {
                          ".validate" : "newData.isString()"
                        },
                        "address2" : {
                          ".validate" : "newData.isString()"
                        },
                        "city" : {
                          ".validate" : "newData.isString()"
                        },
                        "state" : {
                          ".validate" : "newData.isString()"
                        },
                        "zip" : {
                          ".validate" : "newData.isNumber() && newData.val() > 9999 && newData.val() < 100000"
                        },
                        "country" : {
                          ".validate" : "newData.isString()"
                        }
                    }
                }
	    	}
	    }
  	}
}
